{"ast":null,"code":"const client = require(\"contentful\").createClient({\n  space: \"rnmht6wsj5nl\",\n  accessToken: \"_AsjIH6r4ph08uPsSxi_61X8pBSjVP_PSOKOBXpObCM\"\n});\n\nconst getBlogPosts = () => client.getEntries().then(response => response.items);\n\nconst getSinglePost = slug => client.getEntries({\n  \"fields.slug\": slug,\n  content_type: \"post\"\n}).then(response => response.items);\n\nconst getTaggedPost = tag => client.getEntries({\n  \"fields.tags\": tag,\n  content_type: \"post\"\n}).then(response => response.items);\n\nconst getTaggedPosts = tag => client.getEntries({\n  \"fields.tags\": tag,\n  content_type: \"post\"\n}).then(response => response.items);\n\nexport { getTaggedPost, getBlogPosts, getSinglePost, getTaggedPosts };","map":{"version":3,"sources":["/home/laudebugs/github/laudebugs.me/laudebugs.me-frontend/src/contentful.js"],"names":["client","require","createClient","space","accessToken","getBlogPosts","getEntries","then","response","items","getSinglePost","slug","content_type","getTaggedPost","tag","getTaggedPosts"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAChDC,EAAAA,KAAK,EAAE,cADyC;AAEhDC,EAAAA,WAAW,EAAE;AAFmC,CAAnC,CAAf;;AAKA,MAAMC,YAAY,GAAG,MACnBL,MAAM,CAACM,UAAP,GAAoBC,IAApB,CAA0BC,QAAD,IAAcA,QAAQ,CAACC,KAAhD,CADF;;AAGA,MAAMC,aAAa,GAAIC,IAAD,IACpBX,MAAM,CACHM,UADH,CACc;AACV,iBAAeK,IADL;AAEVC,EAAAA,YAAY,EAAE;AAFJ,CADd,EAKGL,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,KAL/B,CADF;;AAQA,MAAMI,aAAa,GAAIC,GAAD,IACpBd,MAAM,CACHM,UADH,CACc;AACV,iBAAeQ,GADL;AAEVF,EAAAA,YAAY,EAAE;AAFJ,CADd,EAKGL,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,KAL/B,CADF;;AAQA,MAAMM,cAAc,GAAID,GAAD,IACrBd,MAAM,CACHM,UADH,CACc;AACV,iBAAeQ,GADL;AAEVF,EAAAA,YAAY,EAAE;AAFJ,CADd,EAKGL,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,KAL/B,CADF;;AAQA,SAASI,aAAT,EAAwBR,YAAxB,EAAsCK,aAAtC,EAAqDK,cAArD","sourcesContent":["const client = require(\"contentful\").createClient({\n  space: \"rnmht6wsj5nl\",\n  accessToken: \"_AsjIH6r4ph08uPsSxi_61X8pBSjVP_PSOKOBXpObCM\",\n});\n\nconst getBlogPosts = () =>\n  client.getEntries().then((response) => response.items);\n\nconst getSinglePost = (slug) =>\n  client\n    .getEntries({\n      \"fields.slug\": slug,\n      content_type: \"post\",\n    })\n    .then((response) => response.items);\n\nconst getTaggedPost = (tag) =>\n  client\n    .getEntries({\n      \"fields.tags\": tag,\n      content_type: \"post\",\n    })\n    .then((response) => response.items);\n\nconst getTaggedPosts = (tag) =>\n  client\n    .getEntries({\n      \"fields.tags\": tag,\n      content_type: \"post\",\n    })\n    .then((response) => response.items);\n\nexport { getTaggedPost, getBlogPosts, getSinglePost, getTaggedPosts };\n"]},"metadata":{},"sourceType":"module"}