{"ast":null,"code":"var _jsxFileName = \"/home/laudebugs/github/laudebugs.me/laudebugs.me-frontend/src/components/FeaturedContent.jsx\";\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport MD from 'react-markdown';\nimport { documentToHtmlString } from \"@contentful/rich-text-html-renderer\";\nimport { useTaggedPosts } from \"../custom-hooks\";\nimport { readableDate } from '../helpers';\nimport './SinglePost.less';\nexport default function SinglePost() {\n  const [miniFeatures, miniFeaturesLoading] = useTaggedPosts(\"miniFeature\");\n  console.log(miniFeatures);\n\n  const otherFeatures = () => {\n    if (miniFeaturesLoading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 39\n      }\n    }, \"Loading...\");\n    return miniFeatures.map(post => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"miniFeatureOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: post.fields.feature_image.fields.file.url,\n      alt: post.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      key: \"/writing/\" + post.fields.slug,\n      to: \"/writing/\" + post.fields.slug,\n      className: \"preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, readableDate(post.fields.date)), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, post.fields.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, post.fields.description), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postPreview\",\n      dangerouslySetInnerHTML: {\n        __html: documentToHtmlString(post.fields.body).substring(0, 200) + \"   ... \"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, otherFeatures());\n}","map":{"version":3,"sources":["/home/laudebugs/github/laudebugs.me/laudebugs.me-frontend/src/components/FeaturedContent.jsx"],"names":["React","Link","useParams","MD","documentToHtmlString","useTaggedPosts","readableDate","SinglePost","miniFeatures","miniFeaturesLoading","console","log","otherFeatures","map","post","fields","feature_image","file","url","title","slug","date","description","__html","body","substring"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,EAAP,MAAe,gBAAf;AACA,SAASC,oBAAT,QAAqC,qCAArC;AAEA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAO,mBAAP;AACA,eAAe,SAASC,UAAT,GAAsB;AAEjC,QAAM,CAACC,YAAD,EAAeC,mBAAf,IAAsCJ,cAAc,CACxD,aADwD,CAA1D;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AAGA,QAAMI,aAAa,GAAG,MAAM;AAE1B,QAAIH,mBAAJ,EAAyB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAEzB,WAAOD,YAAY,CAACK,GAAb,CAAkBC,IAAD,iBACtB;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AACM,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAL,CAAYC,aAAZ,CAA0BD,MAA1B,CAAiCE,IAAjC,CAAsCC,GADjD;AAEM,MAAA,GAAG,EAAEJ,IAAI,CAACK,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAKE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAE,cAAcL,IAAI,CAACC,MAAL,CAAYK,IADjC;AAEE,MAAA,EAAE,EAAE,cAAcN,IAAI,CAACC,MAAL,CAAYK,IAFhC;AAGE,MAAA,SAAS,EAAC,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQd,YAAY,CAACQ,IAAI,CAACC,MAAL,CAAYM,IAAb,CAApB,CANF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,IAAI,CAACC,MAAL,CAAYI,KAAjB,CARF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIL,IAAI,CAACC,MAAL,CAAYO,WAAhB,CAVF,eAWE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EACJnB,oBAAoB,CAACU,IAAI,CAACC,MAAL,CAAYS,IAAb,CAApB,CAAuCC,SAAvC,CAAiD,CAAjD,EAAoD,GAApD,IACA;AAHqB,OAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CALF,CADK,CAAP;AA4BD,GAhCD;;AAiCA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,aAAa,EADhB,CADJ;AAKC","sourcesContent":["import React from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport MD from 'react-markdown'\nimport { documentToHtmlString } from \"@contentful/rich-text-html-renderer\";\n\nimport { useTaggedPosts } from \"../custom-hooks\";\nimport { readableDate } from '../helpers'\nimport './SinglePost.less'\nexport default function SinglePost() {\n  \n    const [miniFeatures, miniFeaturesLoading] = useTaggedPosts(\n      \"miniFeature\"\n    );\n    console.log(miniFeatures)\n    \n  \n    const otherFeatures = () => {\n      \n      if (miniFeaturesLoading) return <p>Loading...</p>;\n  \n      return miniFeatures.map((post) => (\n        <div className=\"miniFeatureOne\">\n        <img\n              src={post.fields.feature_image.fields.file.url}\n              alt={post.title}\n            />\n          <Link\n            key={\"/writing/\" + post.fields.slug}\n            to={\"/writing/\" + post.fields.slug}\n            className=\"preview\"\n          >\n            \n            <small>{readableDate(post.fields.date)}</small>\n  \n            <h3>{post.fields.title}</h3>\n  \n            <p>{post.fields.description}</p>\n            <div\n              className=\"postPreview\"\n              dangerouslySetInnerHTML={{\n                __html:\n                  documentToHtmlString(post.fields.body).substring(0, 200) +\n                  \"   ... \",\n              }}\n            ></div>\n          </Link>\n        </div>\n      ));\n    };\n    return (\n        <div className=\"post\">\n          {otherFeatures()}\n        </div>\n      )\n    }"]},"metadata":{},"sourceType":"module"}