{"ast":null,"code":"import _slicedToArray from\"/home/laudebugs/github/laudebugs.me/laudebugs.me-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Link,useParams}from\"react-router-dom\";import{documentToHtmlString}from\"@contentful/rich-text-html-renderer\";import{useTaggedPosts}from\"../custom-hooks\";import{readableDate}from\"../components/helpers\";import\"../components/Posts.less\";import WritingHeader from\"../components/WritingHeader\";import WritingFooter from\"../components/WritingFooter\";export default function WritingSubjectPage(){var _useParams=useParams(),subject=_useParams.subject;var _useTaggedPosts=useTaggedPosts(subject),_useTaggedPosts2=_slicedToArray(_useTaggedPosts,2),posts=_useTaggedPosts2[0],isLoading=_useTaggedPosts2[1];console.log(subject);var renderPage=function renderPage(){if(isLoading)return/*#__PURE__*/React.createElement(\"p\",null,\"Loading...\");return posts.map(function(post){return/*#__PURE__*/React.createElement(\"div\",{className:\"postFrame\"},/*#__PURE__*/React.createElement(Link,{key:\"/writing/\"+post.fields.slug,to:\"/writing/\"+post.fields.slug,className:\"preview\"},/*#__PURE__*/React.createElement(\"img\",{src:post.fields.feature_image.fields.file.url,alt:post.title}),/*#__PURE__*/React.createElement(\"small\",null,readableDate(post.fields.date)),/*#__PURE__*/React.createElement(\"h3\",null,post.fields.title),/*#__PURE__*/React.createElement(\"p\",null,post.fields.description),/*#__PURE__*/React.createElement(\"div\",{className:\"postPreview\",dangerouslySetInnerHTML:{__html:documentToHtmlString(post.fields.body).substring(0,200)+\"   ... \"}})));});};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(WritingHeader,{section:\" on \"+subject}),renderPage(),/*#__PURE__*/React.createElement(WritingFooter,null));}","map":{"version":3,"sources":["/home/laudebugs/github/laudebugs.me/laudebugs.me-frontend/src/Pages/WritingSubjectPage.js"],"names":["React","Link","useParams","documentToHtmlString","useTaggedPosts","readableDate","WritingHeader","WritingFooter","WritingSubjectPage","subject","posts","isLoading","console","log","renderPage","map","post","fields","slug","feature_image","file","url","title","date","description","__html","body","substring"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,SAAf,KAAgC,kBAAhC,CACA,OAASC,oBAAT,KAAqC,qCAArC,CAEA,OAAQC,cAAR,KAA6B,iBAA7B,CACA,OAASC,YAAT,KAA6B,uBAA7B,CACA,MAAO,0BAAP,CAEA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CAEA,cAAe,SAASC,CAAAA,kBAAT,EAA8B,gBAEvBN,SAAS,EAFc,CAEnCO,OAFmC,YAEnCA,OAFmC,qBAGhBL,cAAc,CAACK,OAAD,CAHE,oDAGpCC,KAHoC,qBAG7BC,SAH6B,qBAI3CC,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EACA,GAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAEvB,GAAIH,SAAJ,CAAe,mBAAO,0CAAP,CAEf,MAAOD,CAAAA,KAAK,CAACK,GAAN,CAAU,SAACC,IAAD,qBACf,2BAAK,SAAS,CAAC,WAAf,eACE,oBAAC,IAAD,EACE,GAAG,CAAE,YAAcA,IAAI,CAACC,MAAL,CAAYC,IADjC,CAEE,EAAE,CAAE,YAAcF,IAAI,CAACC,MAAL,CAAYC,IAFhC,CAGE,SAAS,CAAC,SAHZ,eAKE,2BACE,GAAG,CAAEF,IAAI,CAACC,MAAL,CAAYE,aAAZ,CAA0BF,MAA1B,CAAiCG,IAAjC,CAAsCC,GAD7C,CAEE,GAAG,CAAEL,IAAI,CAACM,KAFZ,EALF,cASE,iCAAQjB,YAAY,CAACW,IAAI,CAACC,MAAL,CAAYM,IAAb,CAApB,CATF,cAWE,8BAAKP,IAAI,CAACC,MAAL,CAAYK,KAAjB,CAXF,cAaE,6BAAIN,IAAI,CAACC,MAAL,CAAYO,WAAhB,CAbF,cAcE,2BACE,SAAS,CAAC,aADZ,CAEE,uBAAuB,CAAE,CACvBC,MAAM,CACJtB,oBAAoB,CAACa,IAAI,CAACC,MAAL,CAAYS,IAAb,CAApB,CAAuCC,SAAvC,CAAiD,CAAjD,CAAoD,GAApD,EACA,SAHqB,CAF3B,EAdF,CADF,CADe,EAAV,CAAP,CA2BD,CA/BD,CAgCA,mBACA,qDACE,oBAAC,aAAD,EAAe,OAAO,CAAE,OAASlB,OAAjC,EADF,CAEGK,UAAU,EAFb,cAGE,oBAAC,aAAD,MAHF,CADA,CAMD","sourcesContent":["import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { documentToHtmlString } from \"@contentful/rich-text-html-renderer\";\n\nimport {useTaggedPosts} from \"../custom-hooks\"\nimport { readableDate } from \"../components/helpers\";\nimport \"../components/Posts.less\";\n\nimport WritingHeader from \"../components/WritingHeader\";\nimport WritingFooter from \"../components/WritingFooter\";\n \nexport default function WritingSubjectPage() {\n\n  const { subject } = useParams();\n  const [posts, isLoading] = useTaggedPosts(subject);\n  console.log(subject)\n  const renderPage = () => {\n    \n    if (isLoading) return <p>Loading...</p>;\n\n    return posts.map((post) => (\n      <div className=\"postFrame\">\n        <Link\n          key={\"/writing/\" + post.fields.slug}\n          to={\"/writing/\" + post.fields.slug}\n          className=\"preview\"\n        >\n          <img\n            src={post.fields.feature_image.fields.file.url}\n            alt={post.title}\n          />\n          <small>{readableDate(post.fields.date)}</small>\n\n          <h3>{post.fields.title}</h3>\n\n          <p>{post.fields.description}</p>\n          <div\n            className=\"postPreview\"\n            dangerouslySetInnerHTML={{\n              __html:\n                documentToHtmlString(post.fields.body).substring(0, 200) +\n                \"   ... \",\n            }}\n          ></div>\n        </Link>\n      </div>\n    ));\n  };\n  return (\n  <>\n    <WritingHeader section={\" on \" + subject} />\n    {renderPage()}\n    <WritingFooter />\n  </>);\n}\n"]},"metadata":{},"sourceType":"module"}